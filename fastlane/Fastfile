# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

  before_all do
    ENV["SLACK_URL"] = "https://hooks.slack.com/services/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"
  end

  desc "Run build"
  lane :build do
    gradle(task: 'assemble', build_type: 'debug')
  end

  desc "Deploy a new nightly version to Firebase Distribution"
  lane :nightlyWithFirebaseDistribution do
      # Build staging APK
      gradle(task: 'assemble', build_type: 'internal')

      nightly_apk = lane_context[SharedValues::GRADLE_ALL_APK_OUTPUT_PATHS].find{ |i| i["app-*-internal-*.apk"] }

      first_commit = sh("./first_commit_of_yesterday.sh | tr -d '\r\n'")
      last_commit = sh("./last_commit_of_yesterday.sh | tr -d '\r\n'")
      changelog = changelog_from_git_commits(
          between: ["#{first_commit}", "#{last_commit}"],
          pretty: "- %s",
          date_format: "short",
          merge_commit_filtering: "exclude_merges"
      )

      puts "#{changelog}"

      firebase_app_distribution(
          app: "[YOUR_APP_ID]",
          groups: "[GROUPS_TO_WHITCH_IT_SHOULD_BE_SENT]",
          release_notes: "#{changelog}")

      # Post message on slack
      slack(message: "New nightly build was deployed.", success: true)
  end

  error do |lane, exception|
    slack(message: exception.message, success: false)
  end

  # desc "Runs all the tests"
  # lane :test do
  #   gradle(task: "test")
  # end

  # desc "Submit a new Beta Build to Crashlytics Beta"
  # lane :beta do
  #   gradle(task: "clean assembleRelease")
  #   crashlytics
  
  #   # sh "your_script.sh"
  #   # You can also use other beta testing services here
  # end

  # desc "Deploy a new version to the Google Play"
  # lane :deploy do
  #   gradle(task: "clean assembleRelease")
  #   upload_to_play_store
  # end
end
